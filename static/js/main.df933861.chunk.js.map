{"version":3,"sources":["Entries.js","prompts.js","firebaseApp.js","App.js","serviceWorker.js","index.js"],"names":["Entries","removePost","entry","firebase","database","ref","child","remove","state","posts","this","props","data","map","key","className","name","quote","input","onClick","Component","prompts","author","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","generateRandomNumber","setState","number","Math","floor","random","handleStart","handleChange","event","target","value","scrollToMyRef","window","scrollTo","scrollSection","current","offsetTop","scrollToTop","scrollTop","handleRefresh","e","preventDefault","console","log","handleSubmit","dbRef","push","enteredInput","currentQuote","swal","text","button","closeOnClickOutside","React","createRef","on","response","dataFromDb","val","stateToBeSet","journalEntries","onSubmit","action","id","cols","rows","onChange","icon","faRedoAlt","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.df933861.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase';\n\nclass Entries extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            posts: []\n        }\n    }\n\n    // Function to remove posts from Firebase\n    removePost = (entry) => {\n        const dbRef = firebase.database().ref();\n        dbRef.child(entry).remove();\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.props.data.map((entry) => {\n\n                    return (\n                        <ul key={entry.key} className=\"userPost\">\n                            <div>\n                                <li><h3>“{entry.name.quote}”</h3></li>\n                                <li className=\"line\"></li>\n                                <li><p>{entry.name.input}</p></li>\n                                <li><button className=\"remove\" onClick={() => { this.removePost(entry.key) }}>Remove Entry</button></li>\n                            </div>\n                        </ul>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default Entries;","const prompts = [\n    {\n        quote: \"It is impossible for a man to learn what he thinks he already knows.\",\n        author: \"Epictetus\"\n    },\n    {\n        quote: \"We all love ourselves more than other people, but care more about their opinion than our own.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"You shouldn't give circumstances the power to rouse anger, for they don't care at all.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"Your mind will take the shape of what you frequently hold in thought for the human spirit is colored by such impressions.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"To live the good life: We have the potential for it. If we can learn to be indifferent to what makes no difference.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"We have two ears and one mouth so that we can listen twice as much as we speak.\",\n        author: \"Epictetus\"\n    },\n    {\n        quote: \"Never let the future disturb you. You will meet it, if you have to, with the same weapons of reason which today arm you against the present.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"It is the power of the mind to be unconquerable.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"Sometimes even to live is an act of courage.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"Luck is what happens when preparation meets opportunity.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"Difficulties strengthen the mind, as labor does the body.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"There is no easy way from the earth to the stars.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"Hang on to your youthful enthusiasms -- you’ll be able to use them better when you’re older.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"Begin at once to live, and count each separate day as a separate life.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"No man was ever wise by chance.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"We suffer more often in imagination than in reality.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"Most powerful is he who has himself in his own power.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"As long as you live, keep learning how to live.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"It is difficult to bring people to goodness with lessons, but it is easy to do so by example.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"There is no good or bad without us, there is only perception. There is the event itself and the story we tell ourselves about what it means.\",\n        author: \"Ryan Holiday\"\n    },\n    {\n        quote: \"In life, it doesn’t matter what happens to you or where you came from. It matters what you do with what happens & what you’ve been given.\",\n        author: \"Ryan Holiday\"\n    },\n    {\n        quote: \"Think progress, not perfection.\",\n        author: \"Ryan Holiday\"\n    },\n    {\n        quote: \"The Obstacle is the way.\",\n        author: \"Ryan Holiday\"\n    },\n    {\n        quote: \"We must give up things to which we are addicted considering them to be good. Otherwise courage will vanish which should test itsef.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"It's possible to start living again! See things anew as you once did. That is how to restart life!\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"A real man doesn't give way to anger & discontent & such a person has strength, courage & endurance unlike the angry and complaining.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"Who then is invincible? The one who cannot be upset by anything outside their reasoned choice.\",\n        author: \"Epictetus\"\n    },\n    {\n        quote: \"For to be wise is only one thing- to fix our attention on our intelligence which guides all things everywhere.\",\n        author: \"Heraclitus\"\n    },\n    {\n        quote: \"You shouldn't give circumstances the power to rouse anger, for they don't care at all.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"Your mind will take the shape of what you frequently hold in thought.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"Your mind is truly yours.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"First tell yourself what kind of person you want to be, then do what you have to do.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"If you want some good, get it from yourself.\",\n        author: \"Epictetus\"\n    },\n    {\n        quote: \"Where is Good? In our reasoned choices. Where is evil? In our reasoned choices. Where is neither of them? Outside our reasoned choices.\",\n        author: \"Epictetus\"\n    },\n    {\n        quote: \"Let us also produce some blod act of our own & join the ranks of most emulated.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"Kindness is invincible, but only when it's sincere with no hypocrisy or faking.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"How much credence we give to the opinions our peers have of us and how little to our very own.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"What is your vocation? To be a good person.\",\n        author: \"Marus Aurelius\"\n    },\n    {\n        quote: \"Much more harmful are the consequences of anger and grief than the circumstances that aroused them in us!\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"The reason why we have two ears and only one mouth is so we might listen more and talk less.\",\n        author: \"Diogenes Laertius\"\n    },\n    {\n        quote: \"The obstacle on the path becomes the way.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"Silence is the lesson learned from the many sufferings of life.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"But there is no reason to live and no limit to our miseries if we let our fears predominate.\",\n        author: \"Seneca\"\n    },\n    {\n        quote: \"Whenever you suffer pain keep in mind that it's nothing to be ashamed of and that it can't degrade your intelligence nor keep it from acting raitonally.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"Dig deep within yourself, for there is a foundation of goodness every ready to flow if you will keep digging.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"This universe is change. Life is opinion.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"The greater danger for most of us is not that our aim is high and we miss it, but it is low and we hit it.\",\n        author: \"Aristotle\"\n    },\n    {\n        quote: \"When you're onto something great, it won't feel like revolution. It'll feel like uncommon sense.\",\n        author: \"Derek Sivers\"\n    },\n    {\n        quote: \"When you arise in the morning, think of what a precious privilege it is to be alive - to breathe, to think, to enjoy, to love.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"Everything we hear is an opinion, not a fact. Everything we see is a perspective, not the truth.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"Our life is what our thoughts make it.\",\n        author: \"Marcus Aurelius\"\n    },\n    {\n        quote: \"The best revenge is not to be like your enemy.\",\n        author: \"Marcus Aurelius\"\n    }\n]\n\nexport default prompts;","import firebase from 'firebase';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBhzIWM15VHeaV1TAggFvl1Yx7bOhKGAuo\",\n    authDomain: \"fir-practice-jd.firebaseapp.com\",\n    databaseURL: \"https://fir-practice-jd.firebaseio.com\",\n    projectId: \"fir-practice-jd\",\n    storageBucket: \"fir-practice-jd.appspot.com\",\n    messagingSenderId: \"929111914354\",\n    appId: \"1:929111914354:web:595190dc28da9686b00feb\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { Component } from 'react';\nimport Entries from './Entries.js';\nimport prompts from './prompts.js';\nimport firebase from './firebaseApp.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRedoAlt } from '@fortawesome/free-solid-svg-icons'\nimport swal from 'sweetalert';\nimport './App.css';\n\n\n\n// Main functionality of application is in here\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      // Random number that selects a quote from \"prompts\"\n      number: 0,\n\n      // Holds array of input and current quotes\n      data: [],\n\n      // Catches individual characters of user input from textarea\n      input: \"\",\n\n      // Catches entire string of user input from textarea once \"post\" button has been clicked\n      // Used to print to other section of the page\n      enteredInput: \"\",\n\n      // Catches string of current quote based on the quote that is on the screen at the moment of clicking \"post\" button\n      // Used to print to other section of the page\n      currentQuote: \"\",\n    }\n\n    // Setting the reference to the section of the page that should be scrolled to on click of \"post\" button\n    this.scrollSection = React.createRef();\n    this.scrollTop = React.createRef();\n  }\n\n\n  // READING WHAT IS IN FIREBASE\n  // Go into firebase and get data\n  // Organize data from firebase into local data structurre ( key and name )\n  // Set state with recieved data\n  componentDidMount() {\n    // Save reference to firebase in a variable\n    const dbRef = firebase.database().ref();\n\n    dbRef.on('value', (response) => {\n      // Storing entire object from database in a variable\n      const dataFromDb = response.val();\n\n      // Setting an empty array to push to state\n      const stateToBeSet = [];\n\n      // JOURNAL ENTRIES\n      // entire object for one input\n      // {\n        // key - uniquely generated by firebase\n        // name - holds input and quote which is data that is written from \"handleSubmit\" function\n      // }\n\n      // KEY\n      // Uniquely generated by firebase\n\n      // DATAFROMDB\n      // Holds all of the objects from firebase\n\n      // DATAFROMDB[KEY]\n      // Holds individual object of user input\n\n      for (let key in dataFromDb) {\n        const journalEntries = {\n          key: key,\n          name: dataFromDb[key],\n        }\n\n        // Push journalEntries object to empty array \"stateToBeSet\"\n        stateToBeSet.push(journalEntries);\n      }\n\n      // Set state of data to journalEntries object\n      this.setState({\n        data: stateToBeSet,\n      })\n    })\n  }\n\n\n  // Generating random number to select quote from \"prompts\"\n  generateRandomNumber = () => {\n    // Set number in state to a random number\n    this.setState({\n      number: (Math.floor(Math.random() * 52))\n    });\n  }\n\n  // Handle the click of the first button on the page, \"generate a quote\"\n  handleStart = () => {\n    // Call random number\n    this.generateRandomNumber();\n  }\n\n  // Handle textarea input\n  handleChange = (event) => {\n    this.setState({\n      input: event.target.value,\n    });\n  }\n\n  // Function to scroll to section of the page that displays \"posts\"\n  scrollToMyRef = () => {\n    window.scrollTo(0, this.scrollSection.current.offsetTop)\n  }\n\n  // Function to scroll to top of the page on refresh\n  scrollToTop = () => {\n    window.scrollTo(0, this.scrollTop.current.offsetTop)\n  }\n\n\n  handleRefresh = (e) => {\n    e.preventDefault();\n    console.log(\"refresh\")\n\n    this.scrollToTop();\n  }\n\n\n  // WRITING WHAT IS IN FIREBASE\n  // Handles \"post\" button, which submits an object to firebase containing data that is read in componentDidMount\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    // If the textarea isn't empty\n    if (this.state.input !== \"\") {\n      // Save reference to firebase in a variable\n      const dbRef = firebase.database().ref();\n\n      // Save current quote and input in an object\n      const posts = {\n        quote: prompts[this.state.number].quote,\n        input: this.state.input\n      }\n\n      // Push posts object to database\n        // Key - will be uniquely created by firebase in componentDidMount\n        // Name - will contain the object of posts (containing quote and input keys)\n      dbRef.push(posts);\n\n      // Reset the state\n      this.setState({\n        enteredInput: this.state.input,\n        input: \"\",\n        currentQuote: prompts[this.state.number].quote,\n      })\n\n      // Scroll to the top of the section that holds posts\n      this.scrollToMyRef()\n\n    } else {\n      swal({\n        text: \"You can't submit an empty journal input!\",\n        button: \"Go back\",\n        closeOnClickOutside: false\n      });\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header ref={this.scrollTop}>\n          <div className=\"wrapper\">\n            <h1>Deeper</h1>\n            <div>\n            </div>\n            <div className=\"journalEntry\">\n              <div className=\"generatedQuote\">\n                <h2 className=\"quote\">{prompts[this.state.number].quote}</h2>\n                <h3 className=\"author\">- {prompts[this.state.number].author}</h3>\n              </div>\n              <button onClick={this.handleStart} className=\"prompt\">Generate a quote</button>\n              <p>When you read this quote, what do you think about?</p>\n              <form onSubmit={this.handleSubmit} action=\"\">\n                <textarea\n                  name=\"\"\n                  id=\"\"\n                  cols=\"30\"\n                  rows=\"8\"\n                  value={this.state.input}\n                  onChange={this.handleChange}\n                ></textarea>\n                <button className=\"postButton\">Post</button>\n              </form>\n            </div>\n          </div>\n        </header>\n        <ul className=\"posts wrapper\" ref={this.scrollSection}>\n          <ul className=\"userPost autoPost\">\n            <div>\n              <li><h3>“It is impossible for a man to learn what he thinks he already knows.”</h3></li>\n              <li className=\"line\"></li>\n              <li><p>No matter what you pursue in life, keep yourself hungry to learn. Choose to always have a beginner’s mind, constantly looking for another angle. Get comfortable with being wrong, and relish it when it happens. It’s okay to be wrong as long as you make it a lesson. Don’t be afraid to ask questions and seem like an amateur. An open mind can be your greatest asset if you let it.\n\n              We are stubborn creatures who would like to assume we’re smarter or more capable than others, but hoping you’re superior makes you inferior. Ditch the ego and accept your place as an eternal student. Besides, nobody likes a know-it-all, and true “experts” are the ones who will admit when they don’t know something. Why? Because they’d like to learn it.</p></li>\n              <li><button className=\"remove\">Remove Entry</button></li>\n            </div>\n          </ul>\n          <Entries\n            enteredInput={this.state.enteredInput}\n            data={this.state.data}\n            currentQuote={this.state.currentQuote}\n          />\n          <button className=\"refresh\" onClick={this.handleRefresh}>\n            <FontAwesomeIcon icon={faRedoAlt} />\n          </button> \n        </ul>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}